{"version":3,"mappings":"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","names":["match","param","isInt","matchers","int","notint","switch_value","ctx","dirty","create_if_block_1","insert_hydration","target","div","anchor","create_if_block","stores","$$props","page","constructors","components","form","data_0","data_1","data_2","data_3","afterUpdate","mounted","navigated","title","onMount","unsubscribe","$$invalidate","tick","$$value","nodes","__vitePreload","server_loads","dictionary","hooks","error"],"sources":["../../../../../../src/params/int.ts","../../../../../../src/params/notint.ts","../../../../../generated/client-optimized/matchers.js","../../../../../generated/root.svelte","../../../../../generated/client-optimized/app.js"],"sourcesContent":["import type {ParamMatcher} from \"@sveltejs/kit\";\nimport isInt from \"$lib/isInt\";\n\nexport const match: ParamMatcher = (param) => {\n  return isInt(param);\n}\n","import type {ParamMatcher} from \"@sveltejs/kit\";\nimport isInt from \"$lib/isInt\";\n\nexport const match: ParamMatcher = (param) => {\n  // at(-1) must always find something\n  return !isInt(param.split(\"/\").at(-1) as string);\n}\n","import { match as int } from \"../../../src/params/int.ts\";\nimport { match as notint } from \"../../../src/params/notint.ts\";\n\nexport const matchers = { int, notint };","<!-- This file is generated by @sveltejs/kit â€” do not edit it! -->\n<script>\n\timport { setContext, afterUpdate, onMount, tick } from 'svelte';\n\timport { browser } from '$app/environment';\n\n\t// stores\n\texport let stores;\n\texport let page;\n\n\texport let constructors;\n\texport let components = [];\n\texport let form;\n\texport let data_0 = null;\n\texport let data_1 = null;\n\texport let data_2 = null;\n\texport let data_3 = null;\n\n\tif (!browser) {\n\t\tsetContext('__svelte__', stores);\n\t}\n\n\t$: stores.page.set(page);\n\tafterUpdate(stores.page.notify);\n\n\tlet mounted = false;\n\tlet navigated = false;\n\tlet title = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttick().then(() => {\n\t\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n{#if constructors[1]}\n\t<svelte:component this={constructors[0]} bind:this={components[0]} data={data_0}>\n\t\t{#if constructors[2]}\n\t\t\t<svelte:component this={constructors[1]} bind:this={components[1]} data={data_1}>\n\t\t\t\t{#if constructors[3]}\n\t\t\t\t\t<svelte:component this={constructors[2]} bind:this={components[2]} data={data_2}>\n\t\t\t\t\t\t<svelte:component this={constructors[3]} bind:this={components[3]} data={data_3} {form} />\n\t\t\t\t\t</svelte:component>\n\t\t\t\t{:else}\n\t\t\t\t\t<svelte:component this={constructors[2]} bind:this={components[2]} data={data_2} {form} />\n\t\t\t\t{/if}\n\t\t\t</svelte:component>\n\t\t{:else}\n\t\t\t<svelte:component this={constructors[1]} bind:this={components[1]} data={data_1} {form} />\n\t\t{/if}\n\t</svelte:component>\n{:else}\n\t<svelte:component this={constructors[0]} bind:this={components[0]} data={data_0} {form} />\n{/if}\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}","export { matchers } from './matchers.js';\n\nexport const nodes = [\n\t() => import('./nodes/0'),\n\t() => import('./nodes/1'),\n\t() => import('./nodes/2'),\n\t() => import('./nodes/3'),\n\t() => import('./nodes/4'),\n\t() => import('./nodes/5'),\n\t() => import('./nodes/6')\n];\n\nexport const server_loads = [];\n\nexport const dictionary = {\n\t\t\"/camera/[problemId=int]\": [6],\n\t\t\"/[...path=notint]\": [4,[2]],\n\t\t\"/[...path=notint]/[problemId=int]\": [5,[2,3]]\n\t};\n\nexport const hooks = {\n\thandleError: (({ error }) => { console.error(error) }),\n};\n\nexport { default as root } from '../root.svelte';"],"file":"_app/immutable/entry/app.6ca77a97.js"}