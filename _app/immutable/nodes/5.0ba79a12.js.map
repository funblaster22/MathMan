{"version":3,"file":"5.0ba79a12.js","sources":["../../../../../../src/lib/Tool.ts","../../../../../../src/lib/img/eraser.png","../../../../../../src/lib/tools/SelectorTool.svelte","../../../../../../src/lib/img/marker.png","../../../../../../src/lib/tools/MarkerTool.svelte","../../../../../../src/routes/[...path=notint]/[problemId=int]/Tools.svelte","../../../../../../src/routes/[...path=notint]/[problemId=int]/MultilayerCanvas.svelte","../../../../../../node_modules/.pnpm/@sveltejs+kit@1.27.3_svelte@4.2.2_vite@4.5.0/node_modules/@sveltejs/kit/src/runtime/app/navigation.js","../../../../../../src/routes/[...path=notint]/[problemId=int]/QuestionManagement.svelte","../../../../../../src/lib/AttemptPreview.svelte","../../../../../../src/routes/[...path=notint]/[problemId=int]/Attempts.svelte","../../../../../../src/routes/[...path=notint]/[problemId=int]/ProblemViewer.svelte","../../../../../../src/routes/[...path=notint]/[problemId=int]/+page.svelte"],"sourcesContent":["enum Tool {\n  Draw,\n  Correct,\n  Question,\n  None,\n  Select\n}\n\nexport default Tool;\n","export default \"__VITE_ASSET__6dbd8d31__\"","<script lang=\"ts\">\n  import Tool from \"$lib/Tool\";\n  import type {Writable} from \"svelte/store\";\n  import {getContext} from \"svelte\";\n\n  const selectedData = Tool.Select;\n\n  let isSelected = false;\n  let isDrawing = false;\n\n  // Store user input\n  let anchor: [number, number] = [];  // Usually top left\n  let workingEdge: [number, number] = [];  // Usually bottom right\n\n  // Computed values for displaying bounding box\n  let topLeftCorner;\n  let bottomRightCorner;\n\n  let selection: Writable<Tool> = getContext('selection');\n\n  $: isSelected = $selection === selectedData;\n\n  $: {\n    topLeftCorner = [Math.min(anchor[0], workingEdge[0]), Math.min(anchor[1], workingEdge[1])];\n    bottomRightCorner = [Math.max(anchor[0], workingEdge[0]), Math.max(anchor[1], workingEdge[1])];\n  }\n\n  window.addEventListener(\"pointerdown\", (ev: MouseEvent) => {\n    if (isSelected) {\n      isDrawing = true;\n      anchor = workingEdge = [ev.x, ev.y];\n    }\n  });\n  window.addEventListener(\"pointermove\", (ev: MouseEvent) => {\n    if (isDrawing)\n      workingEdge = [ev.x, ev.y];\n  });\n  window.addEventListener(\"pointerup\", () => {\n    isDrawing = false;\n    // Not sure if closing tool or allowing repeats onpointerup is best UX\n    //selection.set(Tool.None);\n    // TODO: save to db\n  });\n</script>\n\n{#if topLeftCorner[1]}\n    <button class=\"border text-center\" style=\"position: fixed\"\n         style:left={topLeftCorner[0] + \"px\"}\n         style:top={topLeftCorner[1] + \"px\"}\n         style:width={bottomRightCorner[0] - topLeftCorner[0] + \"px\"}\n         style:height={bottomRightCorner[1] - topLeftCorner[1] + \"px\"}\n    >\n        Show Solution\n    </button>\n{/if}\n<!-- A little upset about duplicating MarkerTool, but it was _just_ different enough to warrant. -->\n<div class=\"tool\" style:height={isSelected ? \"100%\" : \"30px\"} on:pointerdown|stopPropagation={() => selection.set(isSelected ? Tool.None : selectedData)}>\n    <div style=\"background-color: green\">✅</div>\n</div>\n","export default \"__VITE_ASSET__f311f7c7__\"","<script lang=\"ts\">\n  import {getContext} from \"svelte\";\n  import type {Writable} from \"svelte/store\";\n  import Tool from \"$lib/Tool\";\n  import \"./ToolStyle.css\"\n  import markerUrl from \"$lib/img/marker.png\"\n\n  // I considered implementing this with checkboxes & radio inputs, but 1) cannot uncheck radio buttons\n  // 2) Javascript required anyways 3) it'll be more hassle than it's worth\n\n  // Which tool will be invoked\n  export let tool: Tool;\n  // CSS image filter property\n  export let filter = \"\";\n  // Displayed on hover\n  export let title: string;\n\n  let selection: Writable<Tool> = getContext('selection');\n  let isSelected = false;\n\n  $: isSelected = $selection === tool;\n</script>\n\n<div class=\"tool\" style:height={isSelected ? \"100%\" : \"30px\"} on:pointerdown|stopPropagation={() => selection.set(isSelected ? Tool.None : tool)}>\n    <img style=\"filter:{filter}\" src={markerUrl} {title} draggable=\"false\" />\n</div>\n","<script lang=\"ts\">\n    import Tool from \"$lib/Tool\";\n    import type {Writable} from \"svelte/store\";\n    import eraserUrl from \"$lib/img/eraser.png\"\n    import * as path from \"$lib/path\";\n    import {page} from \"$app/stores\";\n    import SelectorTool from \"$lib/tools/SelectorTool.svelte\";\n    import MarkerTool from \"$lib/tools/MarkerTool.svelte\";\n    import {getContext, setContext} from \"svelte\";\n    import \"$lib/tools/ToolStyle.css\"\n\n    export let selected: Writable<Tool>;\n    setContext('selection', selected);\n\n    let eraserSelected = getContext<Writable<boolean>>(\"eraserEnabled\");\n\n    function toggleEraser(ev: MouseEvent) {\n      eraserSelected.set(!$eraserSelected);\n    }\n</script>\n\n<div id=\"tools\">\n    <SelectorTool />\n    <a href={path.absJoin(\"camera\", $page.params.problemId)}>\n        📷\n    </a>\n    <MarkerTool tool={Tool.Draw} filter=\"grayscale(1)\" title=\"Your work\" />\n    <MarkerTool tool={Tool.Correct} filter=\"hue-rotate(136deg)\" title=\"Correct\" />\n    <MarkerTool tool={Tool.Question} title=\"Question\" />\n    <div class=\"tool\" style:height={$eraserSelected ? \"100%\" : \"30px\"} on:click={toggleEraser}>\n        <img src={eraserUrl} title=\"Eraser\" draggable=\"false\" />\n    </div>\n</div>\n\n<style>\n    #tools {\n        display: flex;\n        align-items: flex-end;\n        justify-content: center;\n        height: 60px;  /* Height when active */\n        gap: 10px;\n    }\n\n    #tools img {\n        width: 100%;\n    }\n</style>\n","<script lang=\"ts\">\n  import {db} from \"$lib/db\";\n  import Tool from \"$lib/Tool\";\n  import {getContext, onMount} from \"svelte\";\n  import type {Writable} from \"svelte/store\";\n\n  export let selectedTool: Writable<Tool>;\n  export let problemId: number;\n  export let attemptId: number;\n\n  // TODO: I'm fearing at some point I'll have to rewrite MultilayerCanvas & db schema so each path is its own object w/ (x,y) position\n\n  //#region Reactive vars\n  let winWidth = 0;\n  let winHeight = 0;\n  let pointerDown = false;\n  let eraserEnabled = getContext<Writable<boolean>>(\"eraserEnabled\");\n  // Milliseconds since epoch that this attempt started. TODO: this state will get messed up when taking picture, but oh well\n  let startTime: number;\n  //#endregion\n\n  // This technically is fist initialized to CanvasElements, but is immediately changed in onMount.\n  // I don't want unused data causing confusion\n  let layers: CanvasRenderingContext2D[] = [];\n\n  function updateCanvasSize() {\n    // neither Window nor IndexedDB is defined on server. ProblemId must also be defined\n    if (typeof window === \"undefined\" || problemId === 0) return;\n    winWidth = window.innerWidth;\n    winHeight = window.innerHeight;\n    requestAnimationFrame(async () => {\n      // For some reason, layers can be null in this case\n      // TODO: debounce or maybe set canvas size to max(width, height) so doesn't have to redraw if rotated or resized\n      if (layers[0] == undefined)\n        return;\n      // !. is acceptable here b/c if I'm editing an attempt (this screen), then it must exist\n      const attempt = (await db.files.get(problemId))!.attempts[attemptId];\n      layers[Tool.Draw].putImageData(attempt.work, 0, 0);\n      layers[Tool.Correct].putImageData(attempt.error, 0, 0);\n      layers[Tool.Question].putImageData(attempt.questions, 0, 0);\n    })\n  }\n\n  $: {\n    // @ts-ignore needed to ensure dependants recognised\n    updateCanvasSize(problemId, attemptId);\n    startTime = new Date().getTime();\n    for (const layer of layers) {\n      const canvas = layer.canvas;\n      layer.clearRect(0, 0, canvas.width, canvas.height);\n    }\n  }\n\n  const save = () => {\n    const winDim = [0, 0, winWidth, winHeight] as const;\n    db.files.update(problemId, file => {\n      // !. is acceptable here\n      const attempt = file.attempts![attemptId];\n      attempt.date = new Date();\n      attempt.duration = Math.floor((new Date().getTime() - startTime) / 1000 / 60);\n      // TODO: properly count questions & mistakes\n      if ($selectedTool == Tool.Correct) attempt.mistakeCount = 1;\n      if ($selectedTool == Tool.Question) attempt.questionCount = 1;\n\n      // $selectedTool < 3 not needed b/c `pointerDown` can only be set if selected first 3 tools, and `save()` is only called if `pointerDown=true`\n      attempt[([\"work\", \"error\", \"questions\"] as const)[$selectedTool as number]] = layers[$selectedTool].getImageData(...winDim);\n    });\n  };\n\n  const isDarkMode = typeof window === \"undefined\" ? false : window.matchMedia('(prefers-color-scheme: dark)').matches;\n  const colors = {\n    // TODO: since color is baked into canvas, if user ever switches color scheme, they're screwed\n    [Tool.Draw]: isDarkMode ? \"white\" : \"black\",\n    [Tool.Correct]: \"red\",\n    [Tool.Question]: \"blue\",\n  } as const;\n\n  const onpointerdown = (ev: PointerEvent) => {\n    // TODO: erase all layers if no color selected\n    if ($selectedTool >= Tool.None) return;\n    const ctx = layers[$selectedTool];\n    pointerDown = true;\n    ctx.strokeStyle = colors[$selectedTool as keyof typeof colors];\n    ctx.lineWidth = $eraserEnabled ? 20 : 1;\n    ctx.globalCompositeOperation = $eraserEnabled ? \"destination-out\" : \"source-over\";\n    // Path never closed, OK. Prevents undoing erase when new path\n    ctx.beginPath();\n    ctx.moveTo(ev.clientX, ev.clientY);\n  }\n  const onpointerup = () => {\n    // Check needed b/c event fired on document level (might be clicking UI, not drawing)\n    if (pointerDown)\n        save();\n    pointerDown = false;\n    // TODO: adjust ROI bounds after erasing\n  }\n  const onpointermove = (ev: PointerEvent) => {\n    if (pointerDown) {\n      const ctx = layers[$selectedTool];\n      ctx.lineTo(ev.clientX, ev.clientY);\n      ctx.stroke();\n    }\n  }\n\n  onMount(() => {\n    window.addEventListener(\"resize\", updateCanvasSize);\n    document.addEventListener(\"pointermove\", onpointermove);\n    document.addEventListener(\"pointerup\", onpointerup);\n    // VERY IMPORTANT to prevent iOS select left edge & magnifying glass when drawing\n    layers.forEach(layer => (layer as HTMLCanvasElement).addEventListener('touchstart', ev => ev.preventDefault()))\n\n    layers = layers.map(canvas => (canvas as HTMLCanvasElement).getContext('2d', {willReadFrequently: true}));\n  });\n</script>\n\n<canvas bind:this={layers[Tool.Draw]} width={winWidth} height={winHeight}></canvas>\n<canvas bind:this={layers[Tool.Correct]} width={winWidth} height={winHeight}></canvas>\n<!-- Bind pointerdown here ensures you clicked canvas as opposed to UI.\nAllowed to finish or draw over UI, so pointermove & pointerup bound at document level -->\n<canvas bind:this={layers[Tool.Question]} width={winWidth} height={winHeight}\n        on:pointerdown|preventDefault={onpointerdown}></canvas>\n\n<style>\n    canvas {\n        position: fixed;\n        left: 0;\n        right: 0;\n    }\n</style>\n","import { client_method } from '../client/singletons.js';\n\n/**\n * If called when the page is being updated following a navigation (in `onMount` or `afterNavigate` or an action, for example), this disables SvelteKit's built-in scroll handling.\n * This is generally discouraged, since it breaks user expectations.\n * @returns {void}\n */\nexport const disableScrollHandling = /* @__PURE__ */ client_method('disable_scroll_handling');\n\n/**\n * Returns a Promise that resolves when SvelteKit navigates (or fails to navigate, in which case the promise rejects) to the specified `url`.\n * For external URLs, use `window.location = url` instead of calling `goto(url)`.\n *\n * @type {(url: string | URL, opts?: {\n *   replaceState?: boolean;\n *   noScroll?: boolean;\n *   keepFocus?: boolean;\n *   invalidateAll?: boolean;\n *   state?: any\n * }) => Promise<void>}\n * @param {string | URL} url Where to navigate to. Note that if you've set [`config.kit.paths.base`](https://kit.svelte.dev/docs/configuration#paths) and the URL is root-relative, you need to prepend the base path if you want to navigate within the app.\n * @param {Object} [opts] Options related to the navigation\n * @param {boolean} [opts.replaceState] If `true`, will replace the current `history` entry rather than creating a new one with `pushState`\n * @param {boolean} [opts.noScroll] If `true`, the browser will maintain its scroll position rather than scrolling to the top of the page after navigation\n * @param {boolean} [opts.keepFocus] If `true`, the currently focused element will retain focus after navigation. Otherwise, focus will be reset to the body\n * @param {boolean} [invalidateAll] If `true`, all `load` functions of the page will be rerun. See https://kit.svelte.dev/docs/load#rerunning-load-functions for more info on invalidation.\n * @param {any} [opts.state] The state of the new/updated history entry\n * @returns {Promise<void>}\n */\nexport const goto = /* @__PURE__ */ client_method('goto');\n\n/**\n * Causes any `load` functions belonging to the currently active page to re-run if they depend on the `url` in question, via `fetch` or `depends`. Returns a `Promise` that resolves when the page is subsequently updated.\n *\n * If the argument is given as a `string` or `URL`, it must resolve to the same URL that was passed to `fetch` or `depends` (including query parameters).\n * To create a custom identifier, use a string beginning with `[a-z]+:` (e.g. `custom:state`) — this is a valid URL.\n *\n * The `function` argument can be used define a custom predicate. It receives the full `URL` and causes `load` to rerun if `true` is returned.\n * This can be useful if you want to invalidate based on a pattern instead of a exact match.\n *\n * ```ts\n * // Example: Match '/path' regardless of the query parameters\n * import { invalidate } from '$app/navigation';\n *\n * invalidate((url) => url.pathname === '/path');\n * ```\n * @type {(url: string | URL | ((url: URL) => boolean)) => Promise<void>}\n * @param {string | URL | ((url: URL) => boolean)} url The invalidated URL\n * @returns {Promise<void>}\n */\nexport const invalidate = /* @__PURE__ */ client_method('invalidate');\n\n/**\n * Causes all `load` functions belonging to the currently active page to re-run. Returns a `Promise` that resolves when the page is subsequently updated.\n * @type {() => Promise<void>}\n * @returns {Promise<void>}\n */\nexport const invalidateAll = /* @__PURE__ */ client_method('invalidate_all');\n\n/**\n * Programmatically preloads the given page, which means\n *  1. ensuring that the code for the page is loaded, and\n *  2. calling the page's load function with the appropriate options.\n *\n * This is the same behaviour that SvelteKit triggers when the user taps or mouses over an `<a>` element with `data-sveltekit-preload-data`.\n * If the next navigation is to `href`, the values returned from load will be used, making navigation instantaneous.\n * Returns a Promise that resolves when the preload is complete.\n *\n * @type {(href: string) => Promise<void>}\n * @param {string} href Page to preload\n * @returns {Promise<void>}\n */\nexport const preloadData = /* @__PURE__ */ client_method('preload_data');\n\n/**\n * Programmatically imports the code for routes that haven't yet been fetched.\n * Typically, you might call this to speed up subsequent navigation.\n *\n * You can specify routes by any matching pathname such as `/about` (to match `src/routes/about/+page.svelte`) or `/blog/*` (to match `src/routes/blog/[slug]/+page.svelte`).\n *\n * Unlike `preloadData`, this won't call `load` functions.\n * Returns a Promise that resolves when the modules have been imported.\n *\n * @type {(...urls: string[]) => Promise<void>}\n * @param {...string[]} urls\n * @returns {Promise<void>}\n */\nexport const preloadCode = /* @__PURE__ */ client_method('preload_code');\n\n/**\n * A navigation interceptor that triggers before we navigate to a new URL, whether by clicking a link, calling `goto(...)`, or using the browser back/forward controls.\n * Calling `cancel()` will prevent the navigation from completing. If the navigation would have directly unloaded the current page, calling `cancel` will trigger the native\n * browser unload confirmation dialog. In these cases, `navigation.willUnload` is `true`.\n *\n * When a navigation isn't client side, `navigation.to.route.id` will be `null`.\n *\n * `beforeNavigate` must be called during a component initialization. It remains active as long as the component is mounted.\n * @type {(callback: (navigation: import('@sveltejs/kit').BeforeNavigate) => void) => void}\n * @param {(navigation: import('@sveltejs/kit').BeforeNavigate) => void} callback\n * @returns {void}\n */\nexport const beforeNavigate = /* @__PURE__ */ client_method('before_navigate');\n\n/**\n * A lifecycle function that runs the supplied `callback` immediately before we navigate to a new URL.\n *\n * If you return a `Promise`, SvelteKit will wait for it to resolve before completing the navigation. This allows you to — for example — use `document.startViewTransition`. Avoid promises that are slow to resolve, since navigation will appear stalled to the user.\n *\n * If a function (or a `Promise` that resolves to a function) is returned from the callback, it will be called once the DOM has updated.\n *\n * `onNavigate` must be called during a component initialization. It remains active as long as the component is mounted.\n * @type {(callback: (navigation: import('@sveltejs/kit').OnNavigate) => import('../../types/internal.js').MaybePromise<(() => void) | void>) => void}\n * @param {(navigation: import('@sveltejs/kit').OnNavigate) => void} callback\n * @returns {void}\n */\nexport const onNavigate = /* @__PURE__ */ client_method('on_navigate');\n\n/**\n * A lifecycle function that runs the supplied `callback` when the current component mounts, and also whenever we navigate to a new URL.\n *\n * `afterNavigate` must be called during a component initialization. It remains active as long as the component is mounted.\n * @type {(callback: (navigation: import('@sveltejs/kit').AfterNavigate) => void) => void}\n * @param {(navigation: import('@sveltejs/kit').AfterNavigate) => void} callback\n * @returns {void}\n */\nexport const afterNavigate = /* @__PURE__ */ client_method('after_navigate');\n","<script lang=\"ts\">\n  import {goto} from \"$app/navigation\";\n  import {liveQuery, type Observable} from \"dexie\";\n  import {db, type FileSlim} from \"$lib/db\";\n  import {page} from \"$app/stores\";\n  import {setSearch, strNumSort} from \"$lib\";\n\n  enum StudyMode {\n    Work = \"Work\",\n    Mistakes = \"Mistakes\",\n    Questions = \"Questions\",\n  }\n\n  export let problemRoute: string;\n  export let problemId: number;\n\n  // 0-indexed. Should be -1 when switching to new question before proper attemptIdx calculated\n  let attemptIdx = -1;\n  $: attemptIdx = $page.data.attemptIdx;\n  let questionIndex = 0;\n  $: questionIndex = Math.max(0, questionsFiltered.findIndex(q => q.id === problemId));\n  $: {\n    const newProblemId = questionsFiltered[questionIndex]?.id;\n    if (newProblemId)\n      // TODO: is there a better way? Causes extra state updates & janky history\n      goto(String(newProblemId) + setSearch({studyMode: studyMode, attempt: String(attemptIdx + 1)}));\n  }\n  let studyMode = $page.url.searchParams.get(\"studyMode\") as StudyMode ?? StudyMode.Work;\n  let flagged = false;\n  let fileName: string;\n  $: db.files.get(problemId).then(file => {\n    flagged = file?.flagged ?? false;\n    fileName = file?.name ?? \"\";\n  });\n\n  function changeQuestion(ev: Event) {\n    questionIndex = Number.parseInt((ev.target as HTMLSelectElement).value);\n    attemptIdx = -1;\n    setAttemptIdx();\n  }\n\n  /** Return the next attempt index after current attempt that still has unanswered questions. If there are none, return -1 */\n  function findNextQuestion() {\n    return questionsFiltered[questionIndex].attempts.findIndex((attempt, idx) => attempt.questions > 0 && idx > attemptIdx);\n  }\n\n  function nextQuestion() {\n    const startingAttIdx = attemptIdx;\n    if (studyMode !== StudyMode.Questions || findNextQuestion() === -1) {\n      questionIndex++;\n      attemptIdx = -1;\n    }\n\n    if (questionIndex >= questionsFiltered.length) {  // At the end of questions list\n      if (studyMode === StudyMode.Work) {\n        const numberMatch = Array.from(fileName.matchAll(/\\d+/g)).at(-1);\n        let newFilename: string | undefined;\n        if (numberMatch != undefined)\n          newFilename =\n            fileName.substring(0, numberMatch.index)\n            + (Number.parseInt(numberMatch[0]) + 1)\n            + fileName.substring(numberMatch.index + numberMatch[0].length)\n          ;\n        db.newFile({basePath: $page.params.path, route: newFilename}).then(id => {\n          if (id >= 0) goto(String(id))\n        });\n      } else {\n        alert(\"Hooray! You are done!\");\n        questionIndex--;\n        attemptIdx = startingAttIdx;\n        return;\n      }\n    }\n\n    setAttemptIdx();\n  }\n\n  function setAttemptIdx() {\n    attemptIdx = studyMode == StudyMode.Questions ?\n      findNextQuestion()\n      : questionsFiltered[questionIndex].attempts.length - 1;\n  }\n\n  function toggleFlag() {\n    flagged = !flagged;\n    db.files.update(problemId, {flagged});\n  }\n\n  const questions: Observable<FileSlim[]> = liveQuery(() =>\n    // Fetch all then filter later b/c requerying w/ `filter` will just re-fetch & iterate over cursor\n    // Could also have consequence where starting new attempt in \"error\" mode could remove the problem from list immediately\n    db.files.where(\"route\").startsWith($page.params.path).toArray().then(files => files.map(file =>\n      ({\n        // Only store necessary fields in memory\n        id: file.id,\n        route: file.route,\n        name: file.name,\n        flagged: file.flagged,\n        attempts: file.attempts.map(attempt => ({\n          questions: attempt.questionCount,\n          mistakes: attempt.mistakeCount\n        }))\n      })\n    ))\n  );\n\n  let questionsFiltered: FileSlim[] = [];\n  $: {\n    const qs = $questions ?? [];\n    switch (studyMode) {\n      case StudyMode.Work:\n        questionsFiltered = qs.filter(question => question.route === problemRoute).sort((a, b) => strNumSort(a.name, b.name));\n        break;\n      case StudyMode.Mistakes:\n        questionsFiltered = qs.filter(question => question.attempts.at(-1)!.mistakes > 0 || question.flagged);\n        break;\n      case StudyMode.Questions:\n        questionsFiltered = qs.filter(question => question.attempts.some(att => att.questions > 0));\n        break;\n    }\n  }\n\n  function resolveQuestions() {\n    db.files.update(problemId, file => {file.attempts[attemptIdx].questionCount = 0});\n    nextQuestion();\n    // TODO: slightly breaks b/c file is immediately removed from list, but it's good enough. Maybe replace questionsFiltered effect with recompute on specific events (studyMode changed, +file && work mode)\n  }\n</script>\n\n{#if questionsFiltered[questionIndex]?.attempts?.[attemptIdx]?.questions > 0}\n    <button on:click={resolveQuestions}>🧠 Resolve questions</button>\n{/if}\n<button on:click={toggleFlag} title={(flagged ? \"un\" : \"\") + \"flag for later\"}>{flagged ? (new Date().getMonth() === 5 ? \"🏳️‍🌈\" : \"🚩\") : \"🏳️\"}</button>\n<select bind:value={studyMode}>\n    {#each Object.keys(StudyMode) as mode}\n        <option value={mode}>{StudyMode[mode]}</option>\n    {/each}\n</select>\n<!-- TODO: this for some reason only properly loads on reload -->\n<select on:change={changeQuestion}>\n    {#each questionsFiltered as question, idx (question.id)}\n        <option value={idx} selected={question.id === problemId}>{question.name}</option>\n    {/each}\n</select>\n<button on:click={nextQuestion}>➡️</button>\n","<script lang=\"ts\">\n  import {onMount} from \"svelte\";\n  import type {Attempt} from \"$lib/db\";\n\n  export let attempt: Attempt;\n  export let idx: number;\n  export let size: number = 100;\n\n  // Is briefly HTMLCanvasElement\n  let canvas: HTMLCanvasElement;\n\n  function scaleImageData(dst: CanvasRenderingContext2D, layers: ImageData[]) {\n    const auxCanvas = document.createElement(\"canvas\");\n    auxCanvas.width = layers[0].width;\n    auxCanvas.height = layers[0].height;\n    // TODO: replace 24 with line height (see HTML also)\n    dst.scale(size / auxCanvas.width, (size - 24) / auxCanvas.height);\n\n    for (const imageData of layers) {\n      auxCanvas.getContext(\"2d\").putImageData(imageData, 0, 0);\n      dst.drawImage(auxCanvas, 0, 0);\n    }\n  }\n\n  onMount(async () => {\n    const ctx = canvas.getContext(\"2d\");\n\n    scaleImageData(ctx, [attempt.work, attempt.error, attempt.questions]);\n  });\n</script>\n\n<div class=\"text-center bg-gray-50\" style:width={size + \"px\"}>\n    <canvas bind:this={canvas} width={size} height={size - 24}></canvas>\n    Attempt {idx + 1}\n</div>\n","<script lang=\"ts\">\n  import {goto} from \"$app/navigation\";\n  import AttemptPreview from \"$lib/AttemptPreview.svelte\";\n  import {liveQuery, type Observable} from \"dexie\";\n  import {type Attempt, Db, db} from \"$lib/db\";\n  import {setSearch} from \"$lib\";\n  import {derived} from \"svelte/store\";\n  import {page} from \"$app/stores\";\n\n  export let problemId: number;\n\n  const curAttempt = derived(page, $page => $page.data.attemptIdx);\n\n  let attempts: Observable<Attempt[]>;\n  $: attempts = liveQuery(\n    () => db.files.get(problemId).then(problem => problem!.attempts)\n  );\n\n  function newAttempt() {\n    db.files.update(problemId, file => {\n      goto(\"?attempt=\" + file.attempts!.push(Db.newBlankAttempt()))\n    });\n  }\n</script>\n\n<!-- TODO: I'm not sure why layout shifts when scrollbar present -->\n{#each $attempts ?? [] as attempt, idx (\"\" + problemId + idx)}\n    <button on:click={() => goto(setSearch({attempt: String(idx + 1)}))} class=\"rounded-md overflow-hidden\" style:outline={idx === $curAttempt ? \"0.25em solid #a400ff\" : \"\"}>\n        <AttemptPreview {attempt} {idx} />\n    </button>\n{/each}\n<button class=\"text-center bg-gray-50 rounded-md w-[100px]\" on:click={newAttempt}>\n    <!-- TODO: replace w, h, leading w/ dynamic values -->\n    <div class=\"w-[100px] h-[76px] align-middle text-5xl leading-[1.65]\">➕</div>\n    New Attempt\n</button>\n","<script lang=\"ts\">\n  import type Movable from \"svelte-moveable\";\n  import {db} from \"$lib/db\";\n\n  export let problemId: number;\n\n  let canvas: HTMLCanvasElement;\n  let movable: Movable;\n\n  $: db.files.get(problemId).then(file => {\n    if (file?.question) {\n      canvas.width = file.question.width;\n      canvas.height = file.question.height;\n      canvas.getContext(\"2d\")!.putImageData(file.question, 0, 0);\n    }\n  });\n\n  function onMouseDown(e: MouseEvent) {\n    setTimeout(() => {\n      movable.dragStart(e);\n    });\n  }\n</script>\n\n<canvas class=\"fixed left-0 top-[2em]\" bind:this={canvas} on:mousedown={onMouseDown}></canvas>\n<!-- TODO: figure out drag to move -->\n<!--Movable\n        bind:this={movable}\n        target={canvas}\n        origin={false}\n        edge={false}\n        draggable={true}\n        throttleDrag={0}\n/-->\n","<script lang=\"ts\">\n  import {derived, writable} from \"svelte/store\";\n  import Tool from \"$lib/Tool\";\n  import Tools from \"./Tools.svelte\";\n  import MultilayerCanvas from \"./MultilayerCanvas.svelte\";\n  import {page} from \"$app/stores\";\n  import QuestionManagement from \"./QuestionManagement.svelte\";\n  import Attempts from \"./Attempts.svelte\";\n  import {db, type File} from \"$lib/db\";\n  import {goto} from \"$app/navigation\";\n  import * as path from \"$lib/path\";\n  import ProblemViewer from \"./ProblemViewer.svelte\";\n  import {setContext} from \"svelte\";\n\n  // Reactive vars\n  const selectedTool = writable(Tool.None);\n  const eraserEnabled = writable(false);\n\n  setContext(\"eraserEnabled\", eraserEnabled);\n\n  const problemId = derived(page, $page => $page.data.problemId);\n  const attemptId = derived(page, $page => $page.data.attemptIdx);\n  let fileRoute: string;\n\n  /**\n   * Ensures `file.route` is a child of `page.params.path`. If not, modify URL so that it is\n   * @param file attempt at retrieving `File` for prop `problemId`. If undefined, go back to file explorer.\n   * EXCEPTION: problemId == 0, do nothing & let `QuestionManagement` deal with it b/c using a non-work study mode\n   */\n  function enforceCorrectUrl(file: File | undefined) {\n    if ($problemId === 0) return;\n    if (file) {\n      fileRoute = file.route;\n      // Only check startsWith instead of full equality b/c can be incomplete when recursively reviewing a folder.\n      // This also means you can't depend on $page.params.path == problemId.route\n      if (!fileRoute.startsWith($page.params.path)) {\n        goto(path.absJoin(fileRoute, $page.params.problemId));\n      }\n    } else {\n      // If entry doesn't exist, go back to file viewer (automatically making the file may be undesirable and collide w/ autoincr)\n      goto(path.upCwd($page));\n    }\n  }\n\n  $: db.files.get($problemId).then(enforceCorrectUrl);\n</script>\n\n<svelte:head>\n    <title>MathMan Draw</title>\n</svelte:head>\n\n<ProblemViewer problemId={$problemId} />\n<MultilayerCanvas {selectedTool} problemId={$problemId} attemptId={$attemptId} />\n<div id=\"grid\" class:selected={$selectedTool !== Tool.None}>\n    <div id=\"breadcrumbs\">\n        <a href={path.upCwd($page)}>🏠</a>\n        {#each $page.params.path.split(\"/\") as folder}\n            <!-- TODO: each folder bring you back to the explorer -->\n            /{folder}\n        {/each}\n    </div>\n    <div id=\"question-management\" class=\"text-right\">\n        <QuestionManagement problemId={$problemId} problemRoute={fileRoute} />\n    </div>\n    <div id=\"tools-container\"><Tools selected={selectedTool} /></div>\n    <div id=\"attempts-container\" class=\"flex flex-col p-3 gap-3\">\n        <Attempts problemId={$problemId} />\n    </div>\n</div>\n\n<style>\n    #grid {\n        --safe-area-top: 20px;\n        --safe-area-left: 0;\n        /* TODO: tailwindify */\n        --safe-area-right: calc(100px + 0.75rem * 2);\n        --safe-area-bottom: calc(60px + env(safe-area-inset-bottom));\n\n        pointer-events: none;\n        position: fixed;\n        height: 100dvh;\n        width: 100vw;\n        display: grid;\n        padding-top: env(safe-area-inset-top);\n        grid-template-columns: 50vw auto min-content;\n        grid-template-rows: var(--safe-area-top) auto var(--safe-area-bottom);\n        /*font-size: 18pt;*/\n    }\n\n    #grid.selected :not(#tools-container) {\n        display: none;\n    }\n\n    #question-management, #breadcrumbs {\n        /*padding: 1em;*/\n        font-size: 18pt;\n    }\n\n    #tools-container > :global(* > *),\n    #attempts-container > :global(*),\n    #question-management > :global(*),\n    #breadcrumbs > :global(*) {\n        /* This is important b/c it allows drawing on the canvas underneath & selecting UI elements */\n        pointer-events: all;\n    }\n\n    #tools-container {\n        grid-column: 1 / 4;\n        grid-row: 3 / 3;\n    }\n\n    #attempts-container {\n        grid-column: 3 / 4;\n        grid-row: 1 / 4;\n        overflow-y: auto;\n        overflow-x: hidden;\n    }\n</style>\n"],"names":["Tool","Tool2","eraserUrl","ctx","set_style","button","insert_hydration","target","anchor","if_block","create_if_block","div1","selectedData","isSelected","isDrawing","workingEdge","topLeftCorner","bottomRightCorner","selection","getContext","ev","$$invalidate","$selection","markerUrl","attr","img","img_src_value","div","append_hydration","tool","$$props","filter","title","path.absJoin","a","div0","selected","setContext","eraserSelected","toggleEraser","$eraserSelected","canvas0","canvas1","canvas2","selectedTool","problemId","attemptId","winWidth","winHeight","pointerDown","eraserEnabled","startTime","layers","updateCanvasSize","attempt","db","save","winDim","file","$selectedTool","isDarkMode","colors","onpointerdown","$eraserEnabled","onpointerup","onpointermove","onMount","layer","canvas","$$value","goto","client_method","t_value","option","dirty","set_data","t","_c","_b","_a","i","get_key","button0","button0_title_value","add_render_callback","select0","select1","button1","t1","t1_value","StudyMode","problemRoute","attemptIdx","questionIndex","studyMode","$page","flagged","fileName","changeQuestion","setAttemptIdx","findNextQuestion","questionsFiltered","idx","nextQuestion","startingAttIdx","numberMatch","newFilename","id","toggleFlag","questions","liveQuery","files","resolveQuestions","select_value","qs","$questions","question","b","strNumSort","att","q","newProblemId","setSearch","canvas_1","canvas_1_height_value","size","scaleImageData","dst","auxCanvas","imageData","curAttempt","derived","page","attempts","newAttempt","Db","$$subscribe_attempts","problem","movable","onMouseDown","e","each_value","ensure_array_like","path.upCwd","div4","div2","div3","writable","fileRoute","enforceCorrectUrl","$problemId"],"mappings":"isBAAA,IAAKA,GAAAA,IACHA,EAAAC,EAAA,KAAA,CAAA,EAAA,OACAD,EAAAC,EAAA,QAAA,CAAA,EAAA,UACAD,EAAAC,EAAA,SAAA,CAAA,EAAA,WACAD,EAAAC,EAAA,KAAA,CAAA,EAAA,OACAD,EAAAC,EAAA,OAAA,CAAA,EAAA,SALGD,IAAAA,GAAA,CAAA,CAAA,ECAL,MAAeE,GAAA,GAAA,IAAA,IAAA,gCAAA,YAAA,GAAA,EAAA,yRC+CMC,EAAa,CAAA,EAAC,CAAC,EAAI,IAAI,YACxBA,EAAa,CAAA,EAAC,CAAC,EAAI,IAAI,EACrBC,EAAAC,EAAA,QAAAF,KAAkB,CAAC,EAAIA,EAAc,CAAA,EAAA,CAAC,EAAI,IAAI,EAC7CC,EAAAC,EAAA,SAAAF,KAAkB,CAAC,EAAIA,EAAc,CAAA,EAAA,CAAC,EAAI,IAAI,UAJjEG,EAOQC,EAAAF,EAAAG,CAAA,0BANSL,EAAa,CAAA,EAAC,CAAC,EAAI,IAAI,iBACxBA,EAAa,CAAA,EAAC,CAAC,EAAI,IAAI,OACrBC,EAAAC,EAAA,QAAAF,KAAkB,CAAC,EAAIA,EAAc,CAAA,EAAA,CAAC,EAAI,IAAI,OAC7CC,EAAAC,EAAA,SAAAF,KAAkB,CAAC,EAAIA,EAAc,CAAA,EAAA,CAAC,EAAI,IAAI,8FALhEM,EAAAN,KAAc,CAAC,GAAAO,GAAAP,CAAA,wNAWYA,EAAU,CAAA,EAAG,OAAS,MAAM,+BAA5DG,EAEKC,EAAAI,EAAAH,CAAA,oDAbAL,KAAc,CAAC,sFAWYA,EAAU,CAAA,EAAG,OAAS,MAAM,6EAnDpD,MAAAS,EAAeZ,EAAK,WAEtBa,EAAa,GACbC,EAAY,GAGZN,EAAA,CAAA,EACAO,EAAA,CAAA,EAGAC,EACAC,EAEAC,EAA4BC,GAAW,WAAW,qBAStD,OAAO,iBAAiB,cAAgBC,GAAA,CAClCP,IACFC,EAAY,GACZO,EAAA,EAAAb,EAAAa,EAAA,EAASN,EAAe,CAAAK,EAAG,EAAGA,EAAG,CAAC,CAAA,CAAA,KAGtC,OAAO,iBAAiB,cAAgBA,GAAA,CAClCN,GAAAO,EAAA,EACFN,EAAe,CAAAK,EAAG,EAAGA,EAAG,CAAC,CAAA,IAE7B,OAAO,iBAAiB,YAAA,IAAA,CACtBN,EAAY,iBAkBoFI,EAAU,IAAIL,EAAab,EAAK,KAAOY,CAAY,0CApCrJS,EAAA,EAAGR,EAAaS,IAAeV,CAAA,kBAG7BS,EAAA,EAAAL,EAAA,CAAiB,KAAK,IAAIR,EAAO,CAAC,EAAGO,EAAY,CAAC,CAAI,EAAA,KAAK,IAAIP,EAAO,CAAC,EAAGO,EAAY,CAAC,CAAA,CAAA,CAAA,EACvFM,EAAA,EAAAJ,EAAA,CAAqB,KAAK,IAAIT,EAAO,CAAC,EAAGO,EAAY,CAAC,CAAI,EAAA,KAAK,IAAIP,EAAO,CAAC,EAAGO,EAAY,CAAC,CAAA,CAAA,CAAA,2FCxB/F,MAAeQ,GAAA,GAAA,IAAA,IAAA,gCAAA,YAAA,GAAA,EAAA,kNCwBSpB,EAAM,CAAA,CAAA,aAAQoB,EAAS,GAAAC,EAAAC,EAAA,MAAAC,CAAA,8EADfvB,EAAU,CAAA,EAAG,OAAS,MAAM,UAA5DG,EAEKC,EAAAoB,EAAAnB,CAAA,EADDoB,EAAwED,EAAAF,CAAA,sEAApDtB,EAAM,CAAA,CAAA,2CADEA,EAAU,CAAA,EAAG,OAAS,MAAM,4DAZ/C,CAAA,KAAA0B,CAAA,EAAAC,GAEA,OAAAC,EAAS,EAAA,EAAAD,EAET,CAAA,MAAAE,CAAA,EAAAF,EAEPZ,EAA4BC,GAAW,WAAW,yBAClDN,EAAa,eAKiFK,EAAU,IAAIL,EAAab,EAAK,KAAO6B,CAAI,0IAH7IR,EAAA,EAAGR,EAAaS,IAAeO,CAAA,2KCUf3B,EAAS,wGAJL,KAAAF,EAAK,iEACL,KAAAA,EAAK,iEACL,MAAA,CAAA,KAAAA,EAAK,SAAQ,MAAA,UAAA,wDALyB,IAExD,8NAFwD,IAExD,iOAFSiC,GAAa,SAAU9B,EAAK,CAAA,EAAC,OAAO,SAAS,CAAA,mCAMtBA,EAAe,CAAA,EAAG,OAAS,MAAM,yDARrEG,EAWKC,EAAAI,EAAAH,CAAA,qBATDoB,EAEGjB,EAAAuB,CAAA,yEAIHN,EAEKjB,EAAAwB,CAAA,yBAFwEhC,EAAY,CAAA,CAAA,mCANhF8B,GAAa,SAAU9B,EAAK,CAAA,EAAC,OAAO,SAAS,qCAMtBA,EAAe,CAAA,EAAG,OAAS,MAAM,iRAlBtD,GAAA,CAAA,SAAAiC,CAAA,EAAAN,EACXO,GAAW,YAAaD,CAAQ,EAE5B,IAAAE,EAAiBnB,GAA8B,eAAe,8BAEzDoB,EAAanB,EAAA,CACpBkB,EAAe,KAAKE,CAAe,oeCkGIrC,EAAQ,CAAA,CAAA,eAAUA,EAAS,CAAA,CAAA,4CACxBA,EAAQ,CAAA,CAAA,eAAUA,EAAS,CAAA,CAAA,4CAG1BA,EAAQ,CAAA,CAAA,eAAUA,EAAS,CAAA,CAAA,wCAJ5EG,EAAkFC,EAAAkC,EAAAjC,CAAA,mBAClFF,EAAqFC,EAAAmC,EAAAlC,CAAA,mBAGrFF,EAC8DC,EAAAoC,EAAAnC,CAAA,sCAAvBL,EAAa,CAAA,CAAA,CAAA,mCALPA,EAAQ,CAAA,CAAA,oBAAUA,EAAS,CAAA,CAAA,mBACxBA,EAAQ,CAAA,CAAA,oBAAUA,EAAS,CAAA,CAAA,mBAG1BA,EAAQ,CAAA,CAAA,oBAAUA,EAAS,CAAA,CAAA,2LAjH/D,GAAA,CAAA,aAAAyC,CAAA,EAAAd,MACA,GAAA,CAAA,UAAAe,CAAA,EAAAf,EACA,CAAA,UAAAgB,CAAA,EAAAhB,EAKPiB,EAAW,EACXC,EAAY,EACZC,EAAc,GACdC,EAAgB/B,GAA8B,eAAe,sBAE7D,IAAAgC,EAKAC,EAAA,CAAA,EAEK,SAAAC,GAAA,CAEI,OAAA,OAAW,KAAeR,IAAc,IACnDxB,EAAA,EAAA0B,EAAW,OAAO,UAAA,EAClB1B,EAAA,EAAA2B,EAAY,OAAO,WAAA,EACnB,sBAAA,SAAA,CAGM,GAAAI,EAAO,CAAC,GAAK,KAAA,OAGX,MAAAE,GAAA,MAAiBC,EAAG,MAAM,IAAIV,CAAS,GAAI,SAASC,CAAS,EACnEM,EAAOpD,EAAK,IAAI,EAAE,aAAasD,EAAQ,KAAM,EAAG,CAAC,EACjDF,EAAOpD,EAAK,OAAO,EAAE,aAAasD,EAAQ,MAAO,EAAG,CAAC,EACrDF,EAAOpD,EAAK,QAAQ,EAAE,aAAasD,EAAQ,UAAW,EAAG,CAAC,KAcxD,MAAAE,EAAA,IAAA,OACEC,EAAU,CAAA,EAAG,EAAGV,EAAUC,CAAS,EACzCO,EAAG,MAAM,OAAOV,EAAWa,GAAA,OAEnBJ,EAAUI,EAAK,SAAUZ,CAAS,EACxCQ,EAAQ,KAAW,IAAA,KACnBA,EAAQ,SAAW,KAAK,WAAW,KAAO,EAAA,QAAA,EAAYH,GAAa,IAAO,EAAE,EAExEQ,GAAiB3D,EAAK,UAASsD,EAAQ,aAAe,GACtDK,GAAiB3D,EAAK,WAAUsD,EAAQ,cAAgB,GAG5DA,EAAU,CAAA,OAAQ,QAAS,WAAW,EAAYK,CAAuB,GAAKP,EAAOO,CAAa,EAAE,aAAA,GAAgBF,CAAM,KAIxHG,EAAA,OAAoB,OAAW,IAAc,GAAQ,OAAO,WAAW,8BAA8B,EAAE,QACvGC,EAAA,EAEH7D,EAAK,IAAI,EAAG4D,EAAa,QAAU,QACnC,CAAA5D,EAAK,OAAO,EAAG,MACf,CAAAA,EAAK,QAAQ,EAAG,QAGb8D,EAAiB1C,GAAA,CAEjB,GAAAuC,GAAiB3D,EAAK,KAAA,OACpB,MAAAG,EAAMiD,EAAOO,CAAa,EAChCV,EAAc,GACd9C,EAAI,YAAc0D,EAAOF,CAAoC,EAC7DxD,EAAI,UAAY4D,EAAiB,GAAK,EACtC5D,EAAI,yBAA2B4D,EAAiB,kBAAoB,cAEpE5D,EAAI,UAAA,EACJA,EAAI,OAAOiB,EAAG,QAASA,EAAG,OAAO,GAE7B4C,EAAA,IAAA,CAEAf,GACAO,IACJP,EAAc,IAGVgB,EAAiB7C,GAAA,CACjB,GAAA6B,EAAA,CACI,MAAA9C,EAAMiD,EAAOO,CAAa,EAChCxD,EAAI,OAAOiB,EAAG,QAASA,EAAG,OAAO,EACjCjB,EAAI,OAAA,IAIR+D,GAAA,IAAA,CACE,OAAO,iBAAiB,SAAUb,CAAgB,EAClD,SAAS,iBAAiB,cAAeY,CAAa,EACtD,SAAS,iBAAiB,YAAaD,CAAW,EAElDZ,EAAO,QAAQe,GAAUA,EAA4B,iBAAiB,aAAc/C,GAAMA,EAAG,eAAA,CAAA,CAAA,EAE7FC,EAAA,EAAA+B,EAASA,EAAO,IAAIgB,GAAWA,EAA6B,WAAW,MAAO,mBAAoB,EAAA,CAAA,CAAA,CAAA,8CAInFhB,EAAOpD,EAAK,IAAI,EAAAqE,qDAChBjB,EAAOpD,EAAK,OAAO,EAAAqE,qDAGnBjB,EAAOpD,EAAK,QAAQ,EAAAqE,uLA5ErC,CAEEhB,EAAqC,EACrCF,MAAgB,KAAO,EAAA,oBACZgB,KAASf,EAAA,CACZ,MAAAgB,EAASD,EAAM,OACrBA,EAAM,UAAU,EAAG,EAAGC,EAAO,MAAOA,EAAO,MAAM,sICpBhD,MAAME,GAAuBC,GAAc,MAAM,qTCqGpDjE,EAAgEC,EAAAF,EAAAG,CAAA,oBAA9CL,EAAgB,EAAA,CAAA,0DAKRqE,EAAArE,KAAUA,EAAI,EAAA,CAAA,EAAA,gIAArBA,EAAI,EAAA,0BAAnBG,EAA8CC,EAAAkE,EAAAjE,CAAA,oDAMYgE,EAAArE,MAAS,KAAI,uJAAxDA,EAAG,EAAA,+BAAYA,EAAQ,EAAA,EAAC,KAAOA,EAAS,CAAA,uBAAvDG,EAAgFC,EAAAkE,EAAAjE,CAAA,qBAAtBkE,EAAA,IAAAF,KAAAA,EAAArE,MAAS,KAAI,KAAAwE,GAAAC,EAAAJ,CAAA,eAAxDrE,EAAG,EAAA,+CAAYA,EAAQ,EAAA,EAAC,KAAOA,EAAS,CAAA,sEATiBA,EAAO,CAAA,EAAQ,IAAA,KAAI,EAAG,SAAQ,IAAO,EAAI,SAAW,KAAQ,oDAHvI0E,GAAAC,GAAAC,EAAA5E,EAAiB,CAAA,EAACA,EAAgB,CAAA,CAAA,IAAlC,YAAA4E,EAAkC,WAAlC,YAAAD,EAA6C3E,EAAU,CAAA,KAAvD,YAAA0E,EAA0D,WAAY,GAACnE,GAAAP,CAAA,OAKjE,OAAO,KAAKA,EAAS,CAAA,CAAA,CAAA,uBAA1B,OAAI6E,GAAA,8BAMC7E,EAAiB,CAAA,CAAA,EAAmB,MAAA8E,EAAA9E,GAAAA,MAAS,mBAAlD,OAAI6E,GAAA,EAAA,qmBAR4BxD,EAAA0D,EAAA,QAAAC,GAAAhF,EAAU,CAAA,EAAA,KAAO,IAAM,gBAAgB,EACzDA,EAAS,CAAA,IAAA,QAAAiF,GAAA,IAAAjF,EAAA,EAAA,EAAA,KAAAkF,CAAA,CAAA,+BAD7B/E,EAA0JC,EAAA2E,EAAA1E,CAAA,kBAC1JF,EAIQC,EAAA8E,EAAA7E,CAAA,wDAJYL,EAAS,CAAA,EAAA,EAAA,WAM7BG,EAIQC,EAAA+E,EAAA9E,CAAA,4DACRF,EAA0CC,EAAAgF,EAAA/E,CAAA,qBAZxBL,EAAU,CAAA,CAAA,mCAOTA,EAAc,CAAA,CAAA,cAKfA,EAAY,CAAA,CAAA,kCAfzB0E,GAAAC,GAAAC,EAAA5E,EAAiB,CAAA,EAACA,EAAgB,CAAA,CAAA,IAAlC,YAAA4E,EAAkC,WAAlC,YAAAD,EAA6C3E,EAAU,CAAA,KAAvD,YAAA0E,EAA0D,WAAY,iFAGK1E,EAAO,CAAA,EAAQ,IAAA,KAAI,EAAG,SAAQ,IAAO,EAAI,SAAW,KAAQ,QAAKwE,GAAAa,EAAAC,CAAA,EAA3Gf,EAAA,IAAAS,KAAAA,GAAAhF,EAAU,CAAA,EAAA,KAAO,IAAM,6CAElD,OAAO,KAAKA,EAAS,CAAA,CAAA,CAAA,oBAA1B,OAAI6E,GAAA,EAAA,sHAAJ,kBADc7E,EAAS,CAAA,CAAA,cAOlBA,EAAiB,CAAA,CAAA,sNArIrB,IAAAuF,GAAAA,IACHA,EAAA,KAAO,OACPA,EAAA,SAAW,WACXA,EAAA,UAAY,YAHTA,IAAAA,GAAA,CAAA,CAAA,EAMM,GAAA,CAAA,aAAAC,CAAA,EAAA7D,EACA,CAAA,UAAAe,CAAA,EAAAf,EAGP8D,EAAa,GAEbC,EAAgB,EAQhBC,EAAYC,EAAM,IAAI,aAAa,IAAI,WAAW,GAAkB,OACpEC,EAAU,GACVC,WAMKC,EAAe9E,EAAA,CACtBC,EAAA,EAAAwE,EAAgB,OAAO,SAAUzE,EAAG,OAA6B,KAAK,CAAA,MACtEwE,EAAa,EAAA,EACbO,IAIO,SAAAC,GAAA,QACAC,EAAkBR,CAAa,EAAE,SAAS,UAAW,CAAAvC,EAASgD,IAAQhD,EAAQ,UAAY,GAAKgD,EAAMV,CAAU,EAG/G,SAAAW,GAAA,OACDC,EAAiBZ,EAMnB,IALAE,IAAc,aAAuBM,EAAuB,IAAA,MAC9D/E,EAAA,EAAAwE,IAAAA,CAAA,MACAD,EAAa,EAAA,GAGXC,GAAiBQ,EAAkB,UACjCP,IAAc,OAAA,CACV,MAAAW,EAAc,MAAM,KAAKR,EAAS,SAAS,MAAM,CAAA,EAAG,KAAK,EAC3D,IAAAS,EACAD,GAAe,OACjBC,EACET,EAAS,UAAU,EAAGQ,EAAY,KAAK,GACpC,OAAO,SAASA,EAAY,CAAC,CAAA,EAAK,GACnCR,EAAS,UAAUQ,EAAY,MAAQA,EAAY,CAAC,EAAE,MAAM,GAElElD,EAAG,QAAA,CAAS,SAAUwC,EAAM,OAAO,KAAM,MAAOW,IAAc,KAAKC,GAAA,CAC7DA,GAAM,GAAGrC,GAAK,OAAOqC,CAAE,CAAA,SAG7B,MAAM,uBAAuB,EAC7BtF,EAAA,EAAAwE,IAAAA,CAAA,MACAD,EAAaY,CAAA,SAKjBL,IAGO,SAAAA,GAAA,CACP9E,EAAA,EAAAuE,EAAaE,GAAa,YACxBM,EAAA,EACEC,EAAkBR,CAAa,EAAE,SAAS,OAAS,CAAA,EAGhD,SAAAe,GAAA,KACPZ,EAAW,CAAAA,CAAA,EACXzC,EAAG,MAAM,OAAOV,EAAY,CAAA,QAAAmD,CAAA,CAAA,QAGxBa,EAAoCC,GAAA,IAGxCvD,EAAG,MAAM,MAAM,OAAO,EAAE,WAAWwC,EAAM,OAAO,IAAI,EAAE,QAAA,EAAU,KAAKgB,GAASA,EAAM,IAAIrD,IAAA,CAGpF,GAAIA,EAAK,GACT,MAAOA,EAAK,MACZ,KAAMA,EAAK,KACX,QAASA,EAAK,QACd,SAAUA,EAAK,SAAS,IAAIJ,IAAA,CAC1B,UAAWA,EAAQ,cACnB,SAAUA,EAAQ,yCAMtB,IAAA+C,EAAA,CAAA,EAgBK,SAAAW,GAAA,CACPzD,EAAG,MAAM,OAAOV,EAAWa,GAAA,CAASA,EAAK,SAASkC,CAAU,EAAE,cAAgB,IAC9EW,iBASgBT,EAASmB,GAAA,IAAA,+JAnHxB5F,EAAA,EAAAuE,EAAaG,EAAM,KAAK,UAAA,mBAyF3B,OACQmB,EAAKC,GAAA,GACH,OAAArB,EAAA,CACD,IAAA,OACHzE,EAAA,EAAAgF,EAAoBa,EAAG,OAAOE,GAAYA,EAAS,QAAUzB,CAAY,EAAE,KAAM,CAAAzD,EAAGmF,IAAMC,GAAWpF,EAAE,KAAMmF,EAAE,IAAI,CAAA,CAAA,QAEhH,IAAA,eACHhB,EAAoBa,EAAG,OAAOE,GAAYA,EAAS,SAAS,GAAG,EAAE,EAAG,SAAW,GAAKA,EAAS,OAAO,CAAA,QAEjG,IAAA,gBACHf,EAAoBa,EAAG,OAAOE,GAAYA,EAAS,SAAS,KAAKG,GAAOA,EAAI,UAAY,CAAC,CAAA,CAAA,2BAjG5FlG,EAAA,EAAAwE,EAAgB,KAAK,IAAI,EAAGQ,EAAkB,UAAUmB,GAAKA,EAAE,KAAO3E,CAAS,CAAA,CAAA,gBAClF,OACQ4E,GAAe1C,EAAAsB,EAAkBR,CAAa,IAA/B,YAAAd,EAAkC,GACnD0C,GAEFnD,GAAK,OAAOmD,CAAY,EAAIC,GAAA,CAAW,UAAA5B,EAAsB,QAAS,OAAOF,EAAa,CAAC,mBAK5FrC,EAAG,MAAM,IAAIV,CAAS,EAAE,KAAKa,GAAA,CAC9BrC,EAAA,EAAA2E,GAAUtC,GAAA,YAAAA,EAAM,UAAW,EAAA,EAC3BuC,GAAWvC,GAAA,YAAAA,EAAM,OAAQ,iKCChB+B,EAAAtF,KAAM,EAAC,6CADmD;AAAA,aAC3D,sHAD2D;AAAA,aAC3D,kDAD0BA,EAAI,CAAA,CAAA,EAAUqB,EAAAmG,EAAA,SAAAC,EAAAzH,KAAO,EAAE,wCADZC,EAAAuB,EAAA,QAAAxB,KAAO,IAAI,UAA5DG,EAGKC,EAAAoB,EAAAnB,CAAA,EAFDoB,EAAmED,EAAAgG,CAAA,mDAAjCxH,EAAI,CAAA,CAAA,EAAUuE,EAAA,GAAAkD,KAAAA,EAAAzH,KAAO,qBAC9CuE,EAAA,GAAAe,KAAAA,EAAAtF,KAAM,EAAC,KAAAwE,GAAAa,EAAAC,CAAA,OAF6BrF,EAAAuB,EAAA,QAAAxB,KAAO,IAAI,wDA3B/C,GAAA,CAAA,QAAAmD,CAAA,EAAAxB,EACA,CAAA,IAAAwE,CAAA,EAAAxE,GACA,KAAA+F,EAAe,GAAA,EAAA/F,EAGtBsC,EAEK,SAAA0D,EAAeC,EAA+B3E,EAAA,OAC/C4E,EAAY,SAAS,cAAc,QAAQ,EACjDA,EAAU,MAAQ5E,EAAO,CAAC,EAAE,MAC5B4E,EAAU,OAAS5E,EAAO,CAAC,EAAE,OAE7B2E,EAAI,MAAMF,EAAOG,EAAU,OAAQH,EAAO,IAAMG,EAAU,MAAM,YAErDC,KAAa7E,EACtB4E,EAAU,WAAW,IAAI,EAAE,aAAaC,EAAW,EAAG,CAAC,EACvDF,EAAI,UAAUC,EAAW,EAAG,CAAC,EAIjC9D,GAAA,SAAA,OACQ/D,EAAMiE,EAAO,WAAW,IAAI,EAElC0D,EAAe3H,GAAMmD,EAAQ,KAAMA,EAAQ,MAAOA,EAAQ,SAAS,CAAA,8CAKhDc,EAAMC,qkBCL8FjE,EAAAC,EAAA,UAAAF,OAAQA,EAAW,CAAA,EAAG,uBAAyB,EAAE,uBAAxKG,EAEQC,EAAAF,EAAAG,CAAA,6HAF+GJ,EAAAC,EAAA,UAAAF,OAAQA,EAAW,CAAA,EAAG,uBAAyB,EAAE;4BADrKA,EAAS,CAAA,GAAA,CAAA,CAAA,aAAwB,GAAKA,EAAS,CAAA,EAAGA,EAAG,CAAA,kBAA1D,OAAI6E,GAAA,EAAA,4ZAKN1E,EAIQC,EAAAF,EAAAG,CAAA,yBAJ8DL,EAAU,CAAA,CAAA,8BALzEA,EAAS,CAAA,GAAA,CAAA,CAAA,sFAAd,OAAI6E,GAAA,oOAjBO,GAAA,CAAA,UAAAnC,CAAA,EAAAf,EAEL,MAAAoG,EAAaC,GAAQC,GAAMrC,GAASA,EAAM,KAAK,UAAU,qBAE3D,IAAAsC,EAKK,SAAAC,GAAA,CACP/E,EAAG,MAAM,OAAOV,EAAWa,GAAA,CACzBY,GAAK,YAAcZ,EAAK,SAAU,KAAK6E,GAAG,gBAAA,CAAA,CAAA,eAOpBjE,GAAKoD,GAAW,CAAA,QAAS,OAAOpB,EAAM,CAAC,CAAA,CAAA,CAAA,yFAb9DkC,EAAAnH,EAAA,EAAAgH,EAAWvB,GACN,IAAAvD,EAAG,MAAM,IAAIV,CAAS,EAAE,KAAK4F,GAAWA,EAAS,QAAQ,CAAA,CAAA,CAAA,yQCSnEnI,EAA6FC,EAAAoH,EAAAnH,CAAA,gCAArBL,EAAW,CAAA,CAAA,2EApBtE,GAAA,CAAA,UAAA0C,CAAA,EAAAf,EAEPsC,EACAsE,WAUKC,EAAYC,EAAA,CACnB,WAAA,IAAA,CACEF,EAAQ,UAAUE,CAAC,8CAKyBxE,EAAMC,yGAfnDd,EAAG,MAAM,IAAIV,CAAS,EAAE,KAAKa,GAAA,CAC1BA,GAAA,MAAAA,EAAM,eACRU,EAAO,MAAQV,EAAK,SAAS,MAAAU,CAAA,MAC7BA,EAAO,OAASV,EAAK,SAAS,OAAAU,CAAA,EAC9BA,EAAO,WAAW,IAAI,EAAG,aAAaV,EAAK,SAAU,EAAG,CAAC,8KC6CjDvD,EAAM,EAAA,EAAA,oBADgD,GACvD,qBADuD,GACvD,yDAACA,EAAM,EAAA,EAAA,KAAAwE,GAAAa,EAAAC,CAAA,iHAPMtF,EAAU,CAAA,CAAA,iDACQA,EAAU,CAAA,YAAaA,EAAU,CAAA,KAI9D,IAAA0I,EAAAC,GAAA3I,KAAM,OAAO,KAAK,MAAM,GAAG,CAAA,uBAAhC,OAAI6E,GAAA,uDAMyB7E,EAAU,CAAA,eAAgBA,EAAS,CAAA,+BAE3BA,EAAY,CAAA,CAAA,+BAE9BA,EAAU,CAAA,CAAA,gGAXH,IAAE,2YAAF,IAAE,sYAArB4I,GAAW5I,EAAK,CAAA,CAAA,CAAA,uWAFFA,EAAa,CAAA,IAAKH,EAAK,IAAI,uDAA1DM,EAeKC,EAAAyI,EAAAxI,CAAA,EAdDoB,EAMKoH,EAAA7G,CAAA,EALDP,EAAiCO,EAAAD,CAAA,wEAMrCN,EAEKoH,EAAArI,CAAA,qBACLiB,EAAgEoH,EAAAC,CAAA,qBAChErH,EAEKoH,EAAAE,CAAA,0DAhBiB/I,EAAU,CAAA,6CACQA,EAAU,CAAA,qBAAaA,EAAU,CAAA,8BAG5D4I,GAAW5I,EAAK,CAAA,CAAA,wBAClB0I,EAAAC,GAAA3I,KAAM,OAAO,KAAK,MAAM,GAAG,CAAA,oBAAhC,OAAI6E,GAAA,EAAA,sHAAJ,oCAM6B7E,EAAU,CAAA,wBAAgBA,EAAS,CAAA,0CAI7CA,EAAU,CAAA,yCAbRA,EAAa,CAAA,IAAKH,EAAK,IAAI,0VAtClD4C,EAAeuG,GAASnJ,EAAK,IAAI,qBACjC,MAAAkD,EAAgBiG,GAAS,EAAK,EAEpC9G,GAAW,gBAAiBa,CAAa,EAEnC,MAAAL,EAAYsF,GAAQC,GAAMrC,GAASA,EAAM,KAAK,SAAS,qBACvD,MAAAjD,EAAYqF,GAAQC,GAAMrC,GAASA,EAAM,KAAK,UAAU,qBAC1D,IAAAqD,WAOKC,EAAkB3F,EAAA,CACrB4F,IAAe,IACf5F,GACFrC,EAAA,EAAA+H,EAAY1F,EAAK,KAAA,EAGZ0F,EAAU,WAAWrD,EAAM,OAAO,IAAI,GACzCzB,GAAKrC,GAAamH,EAAWrD,EAAM,OAAO,SAAS,CAAA,GAIrDzB,GAAKyE,GAAWhD,CAAK,CAAA,yCAItBxC,EAAG,MAAM,IAAI+F,CAAU,EAAE,KAAKD,CAAiB","x_google_ignoreList":[7]}