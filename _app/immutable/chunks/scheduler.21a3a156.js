function k(){}function w(t,n){for(const e in n)t[e]=n[e];return t}function j(t){return t()}function M(){return Object.create(null)}function E(t){t.forEach(j)}function A(t){return typeof t=="function"}function B(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}let f;function D(t,n){return t===n?!0:(f||(f=document.createElement("a")),f.href=n,t===f.href)}function F(t){return Object.keys(t).length===0}function q(t,...n){if(t==null){for(const r of n)r(void 0);return k}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function P(t,n,e){t.$$.on_destroy.push(q(n,e))}function S(t,n,e,r){if(t){const o=m(t,n,e,r);return t[0](o)}}function m(t,n,e,r){return t[1]&&r?w(e.ctx.slice(),t[1](r(n))):e.ctx}function U(t,n,e,r){if(t[2]&&r){const o=t[2](r(e));if(n.dirty===void 0)return o;if(typeof o=="object"){const i=[],h=Math.max(n.dirty.length,o.length);for(let s=0;s<h;s+=1)i[s]=n.dirty[s]|o[s];return i}return n.dirty|o}return n.dirty}function G(t,n,e,r,o,i){if(o){const h=m(n,e,r,i);t.p(h,o)}}function H(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let r=0;r<e;r++)n[r]=-1;return n}return-1}let _;function d(t){_=t}function l(){if(!_)throw new Error("Function called outside component initialization");return _}function I(t){l().$$.on_mount.push(t)}function J(t){l().$$.after_update.push(t)}function K(t){l().$$.on_destroy.push(t)}function L(t,n){return l().$$.context.set(t,n),n}function N(t){return l().$$.context.get(t)}const a=[],b=[];let u=[];const y=[],x=Promise.resolve();let g=!1;function v(){g||(g=!0,x.then(z))}function Q(){return v(),x}function O(t){u.push(t)}const p=new Set;let c=0;function z(){if(c!==0)return;const t=_;do{try{for(;c<a.length;){const n=a[c];c++,d(n),C(n.$$)}}catch(n){throw a.length=0,c=0,n}for(d(null),a.length=0,c=0;b.length;)b.pop()();for(let n=0;n<u.length;n+=1){const e=u[n];p.has(e)||(p.add(e),e())}u.length=0}while(a.length);for(;y.length;)y.pop()();g=!1,p.clear(),d(t)}function C(t){if(t.fragment!==null){t.update(),E(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(O)}}function R(t){const n=[],e=[];u.forEach(r=>t.indexOf(r)===-1?n.push(r):e.push(r)),e.forEach(r=>r()),u=n}export{a as A,v as B,J as a,b,S as c,U as d,P as e,q as f,H as g,N as h,D as i,L as j,K as k,A as l,M as m,k as n,I as o,z as p,F as q,E as r,B as s,Q as t,G as u,O as v,R as w,_ as x,d as y,j as z};
