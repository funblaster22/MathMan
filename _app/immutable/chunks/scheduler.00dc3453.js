function k(){}function w(t,n){for(const e in n)t[e]=n[e];return t}function j(t){return t()}function M(){return Object.create(null)}function E(t){t.forEach(j)}function A(t){return typeof t=="function"}function B(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}let f;function D(t,n){return t===n?!0:(f||(f=document.createElement("a")),f.href=n,t===f.href)}function F(t){return Object.keys(t).length===0}function v(t,...n){if(t==null){for(const r of n)r(void 0);return k}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function P(t,n,e){t.$$.on_destroy.push(v(n,e))}function S(t,n,e,r){if(t){const o=m(t,n,e,r);return t[0](o)}}function m(t,n,e,r){return t[1]&&r?w(e.ctx.slice(),t[1](r(n))):e.ctx}function U(t,n,e,r){if(t[2]&&r){const o=t[2](r(e));if(n.dirty===void 0)return o;if(typeof o=="object"){const i=[],h=Math.max(n.dirty.length,o.length);for(let s=0;s<h;s+=1)i[s]=n.dirty[s]|o[s];return i}return n.dirty|o}return n.dirty}function G(t,n,e,r,o,i){if(o){const h=m(n,e,r,i);t.p(h,o)}}function H(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let r=0;r<e;r++)n[r]=-1;return n}return-1}function I(t,n,e){return t.set(e),n}let _;function d(t){_=t}function l(){if(!_)throw new Error("Function called outside component initialization");return _}function J(t){l().$$.on_mount.push(t)}function K(t){l().$$.after_update.push(t)}function L(t){l().$$.on_destroy.push(t)}function N(t,n){return l().$$.context.set(t,n),n}function Q(t){return l().$$.context.get(t)}const a=[],b=[];let c=[];const y=[],x=Promise.resolve();let g=!1;function q(){g||(g=!0,x.then(O))}function R(){return q(),x}function C(t){c.push(t)}const p=new Set;let u=0;function O(){if(u!==0)return;const t=_;do{try{for(;u<a.length;){const n=a[u];u++,d(n),z(n.$$)}}catch(n){throw a.length=0,u=0,n}for(d(null),a.length=0,u=0;b.length;)b.pop()();for(let n=0;n<c.length;n+=1){const e=c[n];p.has(e)||(p.add(e),e())}c.length=0}while(a.length);for(;y.length;)y.pop()();g=!1,p.clear(),d(t)}function z(t){if(t.fragment!==null){t.update(),E(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(C)}}function T(t){const n=[],e=[];c.forEach(r=>t.indexOf(r)===-1?n.push(r):e.push(r)),e.forEach(r=>r()),c=n}export{j as A,a as B,q as C,K as a,b,S as c,U as d,P as e,v as f,H as g,I as h,A as i,Q as j,D as k,N as l,L as m,k as n,J as o,M as p,O as q,E as r,B as s,R as t,G as u,F as v,C as w,T as x,_ as y,d as z};
